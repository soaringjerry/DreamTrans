// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: proto/transcription.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// StreamRequest represents the incoming audio data and configuration
type StreamRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Audio data in PCM format
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// Configuration attributes (sent with the first message)
	Attributes    map[string]string `protobuf:"bytes,2,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamRequest) Reset() {
	*x = StreamRequest{}
	mi := &file_proto_transcription_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamRequest) ProtoMessage() {}

func (x *StreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transcription_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamRequest.ProtoReflect.Descriptor instead.
func (*StreamRequest) Descriptor() ([]byte, []int) {
	return file_proto_transcription_proto_rawDescGZIP(), []int{0}
}

func (x *StreamRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *StreamRequest) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

// StreamResponse represents the transcription output
type StreamResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Transcribed text
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// Whether this is a partial transcription
	IsPartial bool `protobuf:"varint,2,opt,name=is_partial,json=isPartial,proto3" json:"is_partial,omitempty"`
	// Timestamp (optional)
	Timestamp     float64 `protobuf:"fixed64,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamResponse) Reset() {
	*x = StreamResponse{}
	mi := &file_proto_transcription_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamResponse) ProtoMessage() {}

func (x *StreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_transcription_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamResponse.ProtoReflect.Descriptor instead.
func (*StreamResponse) Descriptor() ([]byte, []int) {
	return file_proto_transcription_proto_rawDescGZIP(), []int{1}
}

func (x *StreamResponse) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *StreamResponse) GetIsPartial() bool {
	if x != nil {
		return x.IsPartial
	}
	return false
}

func (x *StreamResponse) GetTimestamp() float64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

var File_proto_transcription_proto protoreflect.FileDescriptor

const file_proto_transcription_proto_rawDesc = "" +
	"\n" +
	"\x19proto/transcription.proto\x12\n" +
	"dreamtrans\"\xad\x01\n" +
	"\rStreamRequest\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12I\n" +
	"\n" +
	"attributes\x18\x02 \x03(\v2).dreamtrans.StreamRequest.AttributesEntryR\n" +
	"attributes\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"a\n" +
	"\x0eStreamResponse\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\x12\x1d\n" +
	"\n" +
	"is_partial\x18\x02 \x01(\bR\tisPartial\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x01R\ttimestamp2g\n" +
	"\x14TranscriptionService\x12O\n" +
	"\x10TranscribeStream\x12\x19.dreamtrans.StreamRequest\x1a\x1a.dreamtrans.StreamResponse\"\x00(\x010\x01B+Z)github.com/dreamtrans/backend/proto;protob\x06proto3"

var (
	file_proto_transcription_proto_rawDescOnce sync.Once
	file_proto_transcription_proto_rawDescData []byte
)

func file_proto_transcription_proto_rawDescGZIP() []byte {
	file_proto_transcription_proto_rawDescOnce.Do(func() {
		file_proto_transcription_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_transcription_proto_rawDesc), len(file_proto_transcription_proto_rawDesc)))
	})
	return file_proto_transcription_proto_rawDescData
}

var file_proto_transcription_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_transcription_proto_goTypes = []any{
	(*StreamRequest)(nil),  // 0: dreamtrans.StreamRequest
	(*StreamResponse)(nil), // 1: dreamtrans.StreamResponse
	nil,                    // 2: dreamtrans.StreamRequest.AttributesEntry
}
var file_proto_transcription_proto_depIdxs = []int32{
	2, // 0: dreamtrans.StreamRequest.attributes:type_name -> dreamtrans.StreamRequest.AttributesEntry
	0, // 1: dreamtrans.TranscriptionService.TranscribeStream:input_type -> dreamtrans.StreamRequest
	1, // 2: dreamtrans.TranscriptionService.TranscribeStream:output_type -> dreamtrans.StreamResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_transcription_proto_init() }
func file_proto_transcription_proto_init() {
	if File_proto_transcription_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_transcription_proto_rawDesc), len(file_proto_transcription_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_transcription_proto_goTypes,
		DependencyIndexes: file_proto_transcription_proto_depIdxs,
		MessageInfos:      file_proto_transcription_proto_msgTypes,
	}.Build()
	File_proto_transcription_proto = out.File
	file_proto_transcription_proto_goTypes = nil
	file_proto_transcription_proto_depIdxs = nil
}
